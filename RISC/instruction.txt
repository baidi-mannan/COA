//5 integers

//at address -> 0, 0+1, 0+2, 0+3, 0+4

$1 -> base address
$2 -> num to search at address 5
*************Code start***********
1: lw $1, 6($15)	// $1 <- 0
2: lw $2, 5($1)		// $2 <- element  to be searched
3: lw $8, 6($15)	// $8 <- 0
4: addi $8, -5		// $8 <- -5
5: lw $3, 6($0)		// $3 <- dataMem[6]
6: addi $3, 1		// $3 ++
7: lw $4, 0($1) 	// $4 <- array[$1]
8: add $1, $3		// $1 ++
9: comp $5, $4		// $5 <- !($4)
10: add $5, $2		// $5 <- $5 + $2  -array[$1] + element
11: bz 3		// if zero goto 16
12: add $8, $3		// $8 ++
13: bnz -8		// if not zero goto 7
14: addi $30, 0		// $30 <- 0
15: b 1			// goto 18
16: addi $30, 1		// $30 <- 1
17: b -1			// goto 18
18: 








01100000111100001000000000000110, 
01100000000100010000000000000101, 
01100000111100100000000000000110,
00001000100011111111111111111011, 
01100000111100011000000000000110, 
00001000001100000000000000000001, 
01100000000100100000000000000000, 
00000000000100011000000000000000, 
00000110010100100000000000000000, 
00000000010100010000000000000000, 
10000100000000000000000000000011, 
00000000100000011000000000000000, 
10000111111111111111111111111000, 
00001001111000000000000000000000, 
10000000000000000000000000000001, 
00001001111000000000000000000001, 
10000001111111111111111111111111;

01100000000000001000000000000110
01100000000100010000000000000101
01100000000000100000000000000110
00001000100011111111111111111011
01100000000000011000000000000110
00001000001100000000000000000001
01100000010000011000000000000000
00000000000100011000000000000000
00000110010100100000000000000000
00000000010100010000000000000000
10000100000000000000000000000100
00000000100000011000000000000000
10000111111111111111111111111001
00001001111000000000000000000000
10000000000000000000000000000010
00001001111000000000000000000001
10000000000000000000000000000010











$1 -> base address
$2 -> num to search at address 5
*************Code start***********
1: lw $1, 6($15)	// $1 <- 0
2: lw $2, 5($1)		// $2 <- element  to be searched
3: lw $8, 6($15)	// $8 <- 0
4: addi $8, -5		// $8 <- -5
5: lw $3, 6($0)		// $3 <- dataMem[6]
6: addi $3, 1		// $3 ++
7: lw $4, 0($1) 	// $4 <- array[$1]
8: add $1, $3		// $1 ++
9: comp $5, $4		// $5 <- !($4)
10: add $5, $2		// $5 <- $5 + $2  -array[$1] + element
11: bz 3		// if zero goto 16
12: add $8, $3		// $8 ++
13: bnz -8		// if not zero goto 7
14: addi $30, 0		// $30 <- 0
15: b 2			// goto 18
16: addi $30 ,0		// irredundant instr
17: addi $30, 1		// $30 <- 1
18: b -1			// goto 18
19: 








01100000111100001000000000000110, 
01100000000100010000000000000101, 
01100000111100100000000000000110,
00001000100011111111111111111011, 
01100000111100011000000000000110, 
00001000001100000000000000000001, 
01100000000100100000000000000000, 
00000000000100011000000000000000, 
00000110010100100000000000000000, 
00000000010100010000000000000000, 
10000100000000000000000000000011, 
00000000100000011000000000000000, 
10000111111111111111111111111000, 
00001001111000000000000000000000, 
10000000000000000000000000000010, 
00001001111000000000000000000000, 
00001001111000000000000000000001, 
10000001111111111111111111111111;








$1 -> base address
$2 -> num to search at address 5
*************Code start***********
1: lw $1, 6($15)	// $1 <- 0
2: addi $14, 4		// $14 <-4
3: sw $14, 5($1)	// dataMem[5] <- 4
4: lw $2, 5($1)		// $2 <- element  to be searched
5: lw $8, 6($15)	// $8 <- 0
6: addi $8, -5		// $8 <- -5
7: lw $3, 6($0)		// $3 <- dataMem[6]
8: addi $3, 1		// $3 ++
9: lw $4, 0($1) 	// $4 <- array[$1]
10: add $1, $3		// $1 ++
11: comp $5, $4		// $5 <- !($4)
12: add $5, $2		// $5 <- $5 + $2  -array[$1] + element
13: bz 3		// if zero goto 16
14: add $8, $3		// $8 ++
15: bnz -8		// if not zero goto 7
16: addi $30, 0		// $30 <- 0
17: b 2			// goto 18
18: addi $30 ,0		// irredundant instr
19: addi $30, 1		// $30 <- 1
20: b -1			// goto 18
21: 








01100000111100001000000000000110, 
00001000111000000000000000000100,
01100010000101110000000000000101, 
01100000000100010000000000000101, 
01100000111100100000000000000110,
00001000100011111111111111111011, 
01100000111100011000000000000110, 
00001000001100000000000000000001, 
01100000000100100000000000000000, 
00000000000100011000000000000000, 
00000110010100100000000000000000, 
00000000010100010000000000000000, 
10000100000000000000000000000011, 
00000000100000011000000000000000, 
10000111111111111111111111111000, 
00001001111000000000000000000000, 
10000000000000000000000000000010, 
00001001111000000000000000000000, 
00001001111000000000000000000001, 
10000001111111111111111111111111;



















